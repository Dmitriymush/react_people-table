{"version":3,"sources":["components/Children.js","components/PersonRow.js","components/Buttons.js","components/PeopleTable.js","App.js","index.js"],"names":["Children","children","this","props","react_default","a","createElement","style","listStyleType","map","child","Component","PersonRow","_this$props","_this$props$person","person","id","name","sex","born","died","father","mother","age","century","selected","selectPerson","className","onClick","components_Children","Buttons","sortTypeChange","type","PeopleTable","_ref","filterSortList","valueOnChange","inputValue","Fragment","components_Buttons","value","placeholder","onChange","event","aria-hidden","components_PersonRow","filterSortMemo","createSelector","state","sortType","peopleList","filteredList","Object","toConsumableArray","filter","toLowerCase","includes","filterInput","sort","b","localeCompare","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getPeopleData","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","fetch","sent","abrupt","json","stop","findChildren","user","peopleArr","childrenArr","forEach","push","checkedPersonInList","setState","_objectSpread","target","hasError","personId","isLoading","_this2","then","people","addInfo","ind","Math","ceil","Number","catch","_this$state","PeopleTable_PeopleTable","ReactDOM","render","src_App","test","document","getElementById"],"mappings":"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","file":"static/js/main.ef8637bd.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Children extends Component {\n  render() {\n    const { children } = this.props;\n\n    return (\n      <td style={{ listStyleType: 'none' }}>{children.map(child => <li>{child}</li>)}</td>\n    );\n  }\n}\n\nexport default Children;\n","import React, { Component } from 'react';\nimport Children from './Children';\n\nclass PersonRow extends Component {\n  render() {\n    const {\n      person: {\n        id, name, sex, born, died, father, mother, age, century, children, selected,\n      }, selectPerson,\n    } = this.props;\n\n    return (\n      <tr className={selected === true ? 'Person' : ''} onClick={() => selectPerson(id)}>\n        <td>{id}</td>\n        <td className={born < 1650 ? 'lineThrough' : ''}>{name}</td>\n        <td className={sex === 'm' ? 'male' : 'female'}>{sex}</td>\n        <td>{born}</td>\n        <td>{died}</td>\n        <td>{father}</td>\n        <td>{mother}</td>\n        <td className={age >= 65 ? 'moreThen65' : ''}>{age}</td>\n        <td>{century}</td>\n        <Children children={children} />\n      </tr>\n    );\n  }\n}\n\nexport default PersonRow;\n","import React, { Component } from 'react';\n\nclass Buttons extends Component {\n  render() {\n    const { sortTypeChange } = this.props;\n\n    return (\n      <div className=\"ui eight buttons\">\n        <button\n          type=\"submit\"\n          className=\"ui button\"\n          onClick={() => sortTypeChange('name')}\n        >\n          Sort by name\n        </button>\n        <button\n          type=\"submit\"\n          className=\"ui button\"\n          onClick={() => sortTypeChange('id')}\n        >\n          Sort by id\n        </button>\n        <button\n          type=\"submit\"\n          className=\"ui button\"\n          onClick={() => sortTypeChange('sex')}\n        >\n          Sort by sex\n        </button>\n        <button\n          type=\"submit\"\n          className=\"ui button\"\n          onClick={() => sortTypeChange('born')}\n        >\n          Sort by born\n        </button>\n        <button\n          type=\"submit\"\n          className=\"ui button\"\n          onClick={() => sortTypeChange('died')}\n        >\n          Sort by died\n        </button>\n        <button\n          type=\"submit\"\n          className=\"ui button\"\n          onClick={() => sortTypeChange('age')}\n        >\n          Sort by age\n        </button>\n        <button\n          type=\"submit\"\n          className=\"ui button\"\n          onClick={() => sortTypeChange('century')}\n        >\n          Sort by century\n        </button>\n        <button\n          type=\"submit\"\n          className=\"ui button\"\n          onClick={() => sortTypeChange('all')}\n        >\n          Reset\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Buttons;\n","import React from 'react';\nimport PersonRow from './PersonRow';\nimport Buttons from './Buttons';\n\nexport const PeopleTable = ({\n  filterSortList, selectPerson, valueOnChange, inputValue, sortTypeChange,\n}) => (\n  <>\n    <Buttons sortTypeChange={sortTypeChange} />\n    <div className=\"ui icon input filter\">\n      <input\n        type=\"text\"\n        value={inputValue}\n        placeholder=\"Search by filter upside...\"\n        onChange={event => valueOnChange(event)}\n      />\n      <i aria-hidden=\"true\" className=\"search icon\" />\n    </div>\n    <table className=\"ui celled selectable table\">\n      <thead>\n        <tr>\n          <th>Id</th>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Father</th>\n          <th>Mother</th>\n          <th>Age</th>\n          <th>Century</th>\n          <th>Children</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {filterSortList.map(person => (\n          <PersonRow\n            person={person}\n            selectPerson={selectPerson}\n          />\n        ))}\n      </tbody>\n    </table>\n  < />\n);\n","import React, { Component } from 'react';\nimport { createSelector } from 'reselect';\nimport { PeopleTable } from './components/PeopleTable';\n\nconst filterInput = (inputValue, peopleList) => [...peopleList]\n  .filter((person) => {\n    if (person.name.toLowerCase().includes(inputValue.toLowerCase())\n|| person.mother.toLowerCase().includes(inputValue.toLowerCase())\n|| person.father.toLowerCase().includes(inputValue.toLowerCase())) {\n      return person;\n    } else {\n      return;\n    }\n  });\n\nconst filterSortMemo = createSelector(\n  [\n    state => state.inputValue,\n    state => state.sortType,\n    state => state.peopleList,\n  ],\n  (inputValue, sortType, peopleList) => {\n    const filteredList = filterInput(inputValue, peopleList);\n\n    switch (sortType) {\n      case 'id':\n        return filteredList\n          .sort((a, b) => a - b);\n      case 'name':\n        return filteredList\n          .sort((a, b) => a.name.localeCompare(b.name));\n      case 'sex':\n        return filteredList\n          .sort((a, b) => b.sex.localeCompare(a.sex));\n      case 'born':\n        return filteredList\n          .sort((a, b) => a.born - b.born);\n      case 'died':\n        return filteredList\n          .sort((a, b) => a.died - b.died);\n      case 'age':\n        return filteredList\n          .sort((a, b) => a.age - b.age);\n      case 'century':\n        return filteredList\n          .sort((a, b) => a.century - b.century);\n      default:\n        return filteredList;\n    }\n  }\n);\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      peopleList: [],\n      hasError: false,\n      personId: 1,\n      isLoading: true,\n      inputValue: '',\n      sortType: 'all',\n    };\n  }\n\n  componentDidMount() {\n    this.getPeopleData()\n      .then((people) => {\n        const addInfo = people\n          .map((person, ind) => {\n            const age = person.died - person.born;\n            const century = Math.ceil(person.died / 100);\n            const mother = person.mother ? person.mother : '';\n            const father = person.father ? person.father : '';\n            const children = this.findChildren(person, people);\n\n            return {\n              ...person,\n              age: Number(age),\n              century: Number(century),\n              selected: false,\n              id: ind + 1,\n              mother,\n              father,\n              children,\n            };\n          });\n\n        this.setState({ peopleList: addInfo, isLoading: false });\n      })\n      .catch(() => this.setState({ hasError: true, isLoading: false }));\n  }\n\n  getPeopleData = async() => {\n    const response = await fetch('/api/people.json');\n\n    return response.json();\n  };\n\n  findChildren = (user, peopleArr) => {\n    const childrenArr = [];\n\n    peopleArr.forEach((person) => {\n      if (user.name === person.father || user.name === person.mother) {\n        childrenArr.push(person.name);\n      }\n    });\n\n    return childrenArr;\n  };\n\n  selectPerson = (id) => {\n    const { peopleList } = this.state;\n    const checkedPersonInList = peopleList\n      .map((person) => {\n        if (person.id === id) {\n          person.selected = true;\n\n          return person;\n        }\n\n        person.selected = false;\n\n        return person;\n      });\n\n    this.setState(prev => ({\n      ...prev,\n      peopleList: checkedPersonInList,\n    }));\n  };\n\n  valueOnChange = (event) => {\n    this.setState({ inputValue: event.target.value });\n  };\n\n  sortTypeChange = (type) => {\n    this.setState({ sortType: type });\n  };\n\n  render() {\n    const { isLoading, inputValue } = this.state;\n\n    if (isLoading) {\n      return (\n        <div>Loading...</div>\n      );\n    }\n\n    return (\n      <div>\n        <PeopleTable\n          filterSortList={filterSortMemo(this.state)}\n          selectPerson={this.selectPerson}\n          valueOnChange={this.valueOnChange}\n          inputValue={inputValue}\n          sortTypeChange={this.sortTypeChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Api.css';\n\nimport App from './App';\n\nReactDOM.render(<App test={123} />, document.getElementById('root'));\n"],"sourceRoot":""}